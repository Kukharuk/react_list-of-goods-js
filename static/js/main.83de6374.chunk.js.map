{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGTH","SORT_ALPHABET","App","useState","sortField","setSortField","rev","checkRev","sortedGoods","goods","prepearedGoods","sort","curent","next","length","localeCompare","reverse","sortBy","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,eACjBC,EAAgB,qBA4Bf,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAYC,EAAZ,KACMC,EA7BR,SAAgBC,EAAOL,EAAWE,GAChC,IAAMI,EAAc,YAAOD,GAsB3B,MApBkB,iBAAdL,GAAgCE,EAAM,IAAM,GAC9CI,EAAeC,MAAK,SAACC,EAAQC,GAAT,OAAkBD,EAAOE,OAASD,EAAKC,UAG3C,iBAAdV,GAAgCE,EAAM,IAAM,GAC9CI,EAAeC,MAAK,SAACC,EAAQC,GAAT,OAAkBA,EAAKC,OAASF,EAAOE,UAG3C,uBAAdV,GAAsCE,EAAM,IAAM,GACpDI,EAAeC,MAAK,SAACC,EAAQC,GAAT,OAAkBD,EAAOG,cAAcF,MAG3C,uBAAdT,GAAsCE,EAAM,IAAM,GACpDI,EAAeC,MAAK,SAACC,EAAQC,GAAT,OAAkBA,EAAKE,cAAcH,MAGzC,KAAdR,GAAoBE,EAAM,IAAM,GAClCI,EAAeM,UAGVN,EAMaO,CAAOlB,EAAiBK,EAAWE,GAEvD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UAAW,CAAE,WAAYhB,IAAcH,IAEnDoB,QAAS,kBAAMhB,EAAaJ,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAP9B,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CAAE,WAAYd,EAAM,IAAM,IAEpDe,QAAS,kBAAMd,EAASD,EAAM,IALhC,qBASCF,GAAaE,EAAM,IAAM,EAEtB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,EAAS,IALb,mBAYA,MAGN,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83de6374.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LENGTH = 'sortByLength';\nconst SORT_ALPHABET = 'SortAlphabetically';\n\nfunction sortBy(goods, sortField, rev) {\n  const prepearedGoods = [...goods];\n\n  if (sortField === 'sortByLength' && rev % 2 !== 0) {\n    prepearedGoods.sort((curent, next) => curent.length - next.length);\n  }\n\n  if (sortField === 'sortByLength' && rev % 2 === 0) {\n    prepearedGoods.sort((curent, next) => next.length - curent.length);\n  }\n\n  if (sortField === 'SortAlphabetically' && rev % 2 !== 0) {\n    prepearedGoods.sort((curent, next) => curent.localeCompare(next));\n  }\n\n  if (sortField === 'SortAlphabetically' && rev % 2 === 0) {\n    prepearedGoods.sort((curent, next) => next.localeCompare(curent));\n  }\n\n  if (sortField === '' && rev % 2 === 0) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [rev, checkRev] = useState(1);\n  const sortedGoods = sortBy(goodsFromServer, sortField, rev);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-info', { 'is-light': sortField !== SORT_ALPHABET },\n          )}\n          onClick={() => setSortField(SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning', { 'is-light': rev % 2 !== 0 },\n          )}\n          onClick={() => checkRev(rev + 1)}\n        >\n          Reverse\n        </button>\n        {sortField || rev % 2 === 0\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                checkRev(1);\n              }}\n            >\n              Reset\n            </button>\n\n          )\n          : ''\n        }\n      </div>\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}